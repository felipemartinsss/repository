non-fluents nf_game_of_life_medium_inst_mdp__1 {
	domain = game_of_life_mdp;
	objects {
		x_pos : {x1,x2,x3,x4,x5};
		y_pos : {y1,y2,y3,y4};
	};
	non-fluents {
		NOISE-PROB(x1,y1) = 0.29030868;
		NEIGHBOR(x1,y1,x1,y2);
		NEIGHBOR(x1,y1,x2,y1);
		NEIGHBOR(x1,y1,x2,y2);
		NOISE-PROB(x1,y2) = 0.2998071;
		NEIGHBOR(x1,y2,x1,y1);
		NEIGHBOR(x1,y2,x1,y3);
		NEIGHBOR(x1,y2,x2,y1);
		NEIGHBOR(x1,y2,x2,y2);
		NEIGHBOR(x1,y2,x2,y3);
		NOISE-PROB(x1,y3) = 0.10645056;
		NEIGHBOR(x1,y3,x1,y2);
		NEIGHBOR(x1,y3,x1,y4);
		NEIGHBOR(x1,y3,x2,y2);
		NEIGHBOR(x1,y3,x2,y3);
		NEIGHBOR(x1,y3,x2,y4);
		NOISE-PROB(x1,y4) = 0.20953295;
		NEIGHBOR(x1,y4,x1,y3);
		NEIGHBOR(x1,y4,x2,y3);
		NEIGHBOR(x1,y4,x2,y4);
		NOISE-PROB(x2,y1) = 0.28815818;
		NEIGHBOR(x2,y1,x1,y1);
		NEIGHBOR(x2,y1,x1,y2);
		NEIGHBOR(x2,y1,x2,y2);
		NEIGHBOR(x2,y1,x3,y1);
		NEIGHBOR(x2,y1,x3,y2);
		NOISE-PROB(x2,y2) = 0.15910216;
		NEIGHBOR(x2,y2,x1,y1);
		NEIGHBOR(x2,y2,x1,y2);
		NEIGHBOR(x2,y2,x1,y3);
		NEIGHBOR(x2,y2,x2,y1);
		NEIGHBOR(x2,y2,x2,y3);
		NEIGHBOR(x2,y2,x3,y1);
		NEIGHBOR(x2,y2,x3,y2);
		NEIGHBOR(x2,y2,x3,y3);
		NOISE-PROB(x2,y3) = 0.14141643;
		NEIGHBOR(x2,y3,x1,y2);
		NEIGHBOR(x2,y3,x1,y3);
		NEIGHBOR(x2,y3,x1,y4);
		NEIGHBOR(x2,y3,x2,y2);
		NEIGHBOR(x2,y3,x2,y4);
		NEIGHBOR(x2,y3,x3,y2);
		NEIGHBOR(x2,y3,x3,y3);
		NEIGHBOR(x2,y3,x3,y4);
		NOISE-PROB(x2,y4) = 0.29732218;
		NEIGHBOR(x2,y4,x1,y3);
		NEIGHBOR(x2,y4,x1,y4);
		NEIGHBOR(x2,y4,x2,y3);
		NEIGHBOR(x2,y4,x3,y3);
		NEIGHBOR(x2,y4,x3,y4);
		NOISE-PROB(x3,y1) = 0.22173676;
		NEIGHBOR(x3,y1,x2,y1);
		NEIGHBOR(x3,y1,x2,y2);
		NEIGHBOR(x3,y1,x3,y2);
		NEIGHBOR(x3,y1,x4,y1);
		NEIGHBOR(x3,y1,x4,y2);
		NOISE-PROB(x3,y2) = 0.29220983;
		NEIGHBOR(x3,y2,x2,y1);
		NEIGHBOR(x3,y2,x2,y2);
		NEIGHBOR(x3,y2,x2,y3);
		NEIGHBOR(x3,y2,x3,y1);
		NEIGHBOR(x3,y2,x3,y3);
		NEIGHBOR(x3,y2,x4,y1);
		NEIGHBOR(x3,y2,x4,y2);
		NEIGHBOR(x3,y2,x4,y3);
		NOISE-PROB(x3,y3) = 0.22635198;
		NEIGHBOR(x3,y3,x2,y2);
		NEIGHBOR(x3,y3,x2,y3);
		NEIGHBOR(x3,y3,x2,y4);
		NEIGHBOR(x3,y3,x3,y2);
		NEIGHBOR(x3,y3,x3,y4);
		NEIGHBOR(x3,y3,x4,y2);
		NEIGHBOR(x3,y3,x4,y3);
		NEIGHBOR(x3,y3,x4,y4);
		NOISE-PROB(x3,y4) = 0.22864738;
		NEIGHBOR(x3,y4,x2,y3);
		NEIGHBOR(x3,y4,x2,y4);
		NEIGHBOR(x3,y4,x3,y3);
		NEIGHBOR(x3,y4,x4,y3);
		NEIGHBOR(x3,y4,x4,y4);
		NOISE-PROB(x4,y1) = 0.26651683;
		NEIGHBOR(x4,y1,x3,y1);
		NEIGHBOR(x4,y1,x3,y2);
		NEIGHBOR(x4,y1,x4,y2);
		NEIGHBOR(x4,y1,x5,y1);
		NEIGHBOR(x4,y1,x5,y2);
		NOISE-PROB(x4,y2) = 0.24310324;
		NEIGHBOR(x4,y2,x3,y1);
		NEIGHBOR(x4,y2,x3,y2);
		NEIGHBOR(x4,y2,x3,y3);
		NEIGHBOR(x4,y2,x4,y1);
		NEIGHBOR(x4,y2,x4,y3);
		NEIGHBOR(x4,y2,x5,y1);
		NEIGHBOR(x4,y2,x5,y2);
		NEIGHBOR(x4,y2,x5,y3);
		NOISE-PROB(x4,y3) = 0.22565669;
		NEIGHBOR(x4,y3,x3,y2);
		NEIGHBOR(x4,y3,x3,y3);
		NEIGHBOR(x4,y3,x3,y4);
		NEIGHBOR(x4,y3,x4,y2);
		NEIGHBOR(x4,y3,x4,y4);
		NEIGHBOR(x4,y3,x5,y2);
		NEIGHBOR(x4,y3,x5,y3);
		NEIGHBOR(x4,y3,x5,y4);
		NOISE-PROB(x4,y4) = 0.24301627;
		NEIGHBOR(x4,y4,x3,y3);
		NEIGHBOR(x4,y4,x3,y4);
		NEIGHBOR(x4,y4,x4,y3);
		NEIGHBOR(x4,y4,x5,y3);
		NEIGHBOR(x4,y4,x5,y4);
		NOISE-PROB(x5,y1) = 0.19353859;
		NEIGHBOR(x5,y1,x4,y1);
		NEIGHBOR(x5,y1,x4,y2);
		NEIGHBOR(x5,y1,x5,y2);
		NOISE-PROB(x5,y2) = 0.21571481;
		NEIGHBOR(x5,y2,x4,y1);
		NEIGHBOR(x5,y2,x4,y2);
		NEIGHBOR(x5,y2,x4,y3);
		NEIGHBOR(x5,y2,x5,y1);
		NEIGHBOR(x5,y2,x5,y3);
		NOISE-PROB(x5,y3) = 0.19675654;
		NEIGHBOR(x5,y3,x4,y2);
		NEIGHBOR(x5,y3,x4,y3);
		NEIGHBOR(x5,y3,x4,y4);
		NEIGHBOR(x5,y3,x5,y2);
		NEIGHBOR(x5,y3,x5,y4);
		NOISE-PROB(x5,y4) = 0.20256433;
		NEIGHBOR(x5,y4,x4,y3);
		NEIGHBOR(x5,y4,x4,y4);
		NEIGHBOR(x5,y4,x5,y3);
	};
}

instance game_of_life_medium_inst_mdp__1 {
	domain = game_of_life_mdp;
	non-fluents = nf_game_of_life_medium_inst_mdp__1;
	init-state {
		alive(x1,y4);
		alive(x3,y4);
		alive(x4,y1);
		alive(x4,y2);
		alive(x5,y1);
		alive(x5,y3);
	};

	max-nondef-actions = 1;
	horizon  = 40;
	discount = 0.99;
}
